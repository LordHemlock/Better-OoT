empty bomb

801DAB70 (4 byte)
nothing in hand after bomb 0100FE00
bomb in hand               01120200

801DAB74 (1 byte)
nothing in hand after bomb 00
bomb in hand               12

801DAB4C - pointer to the address of the actor instance in hand 
the above address will 0 out before the hook is reached

801CA0EC - same value as the pointer above but does not 0 if item leaves hand or too early before deconstruction. use this instead


------------------------------------------------------

empty bomb happens cause it never returns to 00FE0000
need to hook into bomb deconstructor(?) and write that value

en_bom
id 0010

overlay table entry 800E8730:
0010	En_Bom	00C0E2D0	00C0F1A0	80870A00	808718D0	00000000	80871710	00000000	0002	00	00

rom  C0E2D0
vram 80870A00
ram  8023620C

bomb instance 801FC460

==========================================
bomb funcitions
==========================================

ovl_En_Bom_Init:	/* 0x80870A0C */
ovl+0
8023620C
runs once upon intitialization

ovl_En_Bom_Exec:	/* 0x80870B24 */
ovl+0x118
80236324
runs toward the end of the bomb explosion

===========================================

ovl_En_Bom_Exec:	/* 0x80870B24 */

	addiu	$sp, $sp, 0xFFE8		/*$sp = FFFFFFE8*/
	sw	$ra, 0x0014($sp)
	-------------------------JAL to custom asm here: 
	sw	a0, 0x0018($sp)
	sw	a1, 0x001C($sp)
	-------------------------JAL to custom asm here: vram 80870B34 | ovl+134
													 rom  C0E404
	lw	a1, 0x0018($sp)  
	lw	a0, 0x001C($sp)
	jal	ovl_En_Poh_Func_4	//0x8004A550
	addiu	a1, a1, 0x0188		/*a1 = 00000188*/
	lw	a1, 0x0018($sp)
	lw	a0, 0x001C($sp)
	jal	ovl_En_Test_Func_14	//0x8004ABCC
	addiu	a1, a1, 0x013C		/*a1 = 0000013C*/
	lw	$ra, 0x0014($sp)
	addiu	$sp, $sp, 0x0018		/*$sp = 00000000*/
	jr	$ra
	nop


	.org 0xC0E404
		JAL empty_bomb_fix
		lw	a1, 0x0018($sp)



	empty_bomb_fix:
		;displaced
		lw	a0, 0x001C($sp)
		addiu    sp, sp, -0x10    ;move sp back 16 bytes
		sw       t0, 0x04(sp)     ;save values at t0 and t1 to retrieve later
    	sw       t1, 0x08(sp)
    	li		 t0, 0x0100FE00   ;load word for value after bomb is gone
    	lui		 t1, 0x801E		  ;one byte more cause the following offset is signed
    	sw		 t0, 0xAB70(t1)   ;save word to 801DAB70
    	li       t0, 0x00 		  ;load byte for value after bomb is gone
    	sb	 	 t0, 0xAB74(t1)   ;store byte to 801DAB74
    	lw		 t1, 0x08(sp)	  ;load old values back to t0 and t1
    	lw		 t0, 0x04(sp)
    	jr		 ra 			  ;jump back
    	addiu    sp, sp, 0x10     ;increase stack pointer back to where it was



need to check for:

if the item in hand is a bomb (02)
	if the instance in links hand is equal to the instance being unloaded (a0)


--------------------

ovl_En_Bom_Exec:	/* 0x80870B24 */

	addiu	$sp, $sp, 0xFFE8		/*$sp = FFFFFFE8*/
	sw	$ra, 0x0014($sp) 
	sw	a0, 0x0018($sp)
	sw	a1, 0x001C($sp)
	lw	a1, 0x0018($sp)  
	lw	a0, 0x001C($sp)
	jal	ovl_En_Poh_Func_4	//0x8004A550
	addiu	a1, a1, 0x0188		/*a1 = 00000188*/
	lw	a1, 0x0018($sp)
	lw	a0, 0x001C($sp)
	jal	ovl_En_Test_Func_14	//0x8004ABCC
	addiu	a1, a1, 0x013C		/*a1 = 0000013C*/
	lw	$ra, 0x0014($sp)
	addiu	$sp, $sp, 0x0018		/*$sp = 00000000*/
	jr	$ra
	nop

empty_bomb_fix:
   ;displaced
   lw a0, 0x001C($sp)

=============================================================================

the above solution doesnt work in all cases
going to instead try to see what 1.1/1.2 does

1.0 item in hand addresses:

801DAB70 (4 byte)
nothing in hand after bomb 0100FE00
bomb in hand               01120200

801DAB74 (1 byte)
nothing in hand after bomb 00
bomb in hand               12

beginning of links actor 1.0 801DAA30
beginning of links actor 1.0 801DB2F0

--
4byte link+0x140
1byte link+144
--

1.2:
801DB430 (4 byte)
nothing in hand after bomb 0100FE00
bomb in hand               01120200

801DB434 (1 byte)
nothing in hand after bomb 00
bomb in hand               12

---

function runs when item in hand is changed
1.0 8038A3A4
1.2 8038AB48

instructions added to 1.2
function+0x1C LW T8, 0x066C(A3)
function+0x20 LUI AT, 0xFEFF
function+0x28 ORI AT, AT, FFF7
function+0x34 AND T9, T8, AT
function+0x38 SW T9, 0x066C(A3)
function+0x40 SLL T0, A2, 2


instructions removed from 1.0
function+0x28 SLL T8, A2, 2

====================================================

find start of links actor 1.2

1.0 start of player_actor 80388B60
1.0 item in hand function 8038A3A4

offsest 0x1844

1.2 item in hand function 8038AB48
function - offset = 80389304

this isnt correct but it was close

===================================================

continuin in new file